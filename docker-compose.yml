version: '3.8'

services:
  petro-quick:
    image: tannous/tannous:petro-quick-ubuntu.22.04
    container_name: petro-quick-core
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    build:
      context: .
      args:
        user: ${user}
        userid: ${userid}
        group: ${group}
        groupid: ${groupid}
    networks:
      - internal
    ports:
      - ${INET_HTTP_SERVER_PORT}:${INET_HTTP_SERVER_PORT}
      - ${EVENT_API_PORT}:${EVENT_API_PORT}
      - ${DJANGO_ADMIN_PORT}:${DJANGO_ADMIN_PORT}
      - ${DATA_API_PORT}:${DATA_API_PORT}
      - ${FLOWER_PORT}:${FLOWER_PORT}
    env_file: .env
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/home/$user/src
    user: ${user}

  # RabbitMQ Service
  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    container_name: petro-quick-rabbitmq
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - internal
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  postgres:
    image: postgres:latest
    container_name: petro-quick-postgres
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWD}
      POSTGRES_DB: ${DATABASE_NAME}
    networks:
     - internal
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  internal:
    driver: bridge 

volumes:
  postgres_data: